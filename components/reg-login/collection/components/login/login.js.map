{"version":3,"file":"login.js","sourceRoot":"","sources":["../../../src/components/login/login.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, Event, EventEmitter, Listen, State } from '@stencil/core/internal';\r\n\r\n@Component({\r\n  tag: 'rf-login',\r\n  styleUrl: './login.css',\r\n  shadow: true,\r\n})\r\nexport class Login {\r\n  @Prop({ reflect: true, mutable: true }) hide: boolean;\r\n  @Event({ bubbles: true, composed: true }) rfEmit: EventEmitter<boolean>;\r\n\r\n  componentWillLoad() {\r\n    this.hide = false;\r\n  }\r\n\r\n  swapping() {\r\n    this.hide = true;\r\n    this.rfEmit.emit();\r\n  }\r\n\r\n  @Listen('rfEmitter', { target: 'body' })\r\n  swap() {\r\n    this.hide = false;\r\n  }\r\n\r\n  emailInputElement: HTMLInputElement;\r\n  passwordInputElement: HTMLInputElement;\r\n  @State() emailInputBind: string;\r\n  @State() passwordInputBind: string;\r\n  @State() isEmailValid = 'blank';\r\n  @State() isPasswordValid = false;\r\n  @State() isLoginSuccess = '';\r\n  emailInputChange(event: Event) {\r\n    let value = (event.target as HTMLInputElement).value;\r\n    console.log(value);\r\n    let emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    let emailValid = emailPattern.test(value);\r\n    if (value == '') {\r\n      this.isEmailValid = 'blank';\r\n    } else if (!emailValid) {\r\n      this.isEmailValid = 'notEmail';\r\n    } else {\r\n      this.isEmailValid = 'valid';\r\n    }\r\n  }\r\n\r\n  passwordInputChange(event: Event) {\r\n    let value = (event.target as HTMLInputElement).value;\r\n    console.log(value);\r\n    if (value == '') {\r\n      this.isPasswordValid = false;\r\n    } else {\r\n      this.isPasswordValid = true;\r\n    }\r\n  }\r\n\r\n  onSubmitForm(event: Event) {\r\n    event.preventDefault();\r\n    let email = this.emailInputElement.value;\r\n    let password = this.passwordInputElement.value;\r\n\r\n    console.log(email);\r\n    console.log(password);\r\n    if (email == 'stencil@live.com' && password == 'stencil123') {\r\n      this.isLoginSuccess = 'success';\r\n    } else {\r\n      this.isLoginSuccess = 'fail';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let emailError = null;\r\n    if (this.isEmailValid == 'blank') {\r\n      emailError = <span class=\"error\">Email can't be blank</span>;\r\n    }\r\n    if (this.isEmailValid == 'notEmail') {\r\n      emailError = <span class=\"error\">Email not valid</span>;\r\n    }\r\n    let passwordError = null;\r\n    if (!this.isPasswordValid) {\r\n      passwordError = <span class=\"error\">Password can't be blank</span>;\r\n    }\r\n\r\n    let message = null;\r\n    if (this.isLoginSuccess == 'success') {\r\n      message = <div class=\"msg-s\">Login successful</div>;\r\n    }\r\n    if (this.isLoginSuccess == 'fail') {\r\n      message = <div class=\"msg-i\">Email or Password incorrect</div>;\r\n    }\r\n    return (\r\n      <div class=\"container\">\r\n        <form class=\"form\" onSubmit={this.onSubmitForm.bind(this)}>\r\n          <h2>Log In</h2>\r\n          <div class=\"card\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              class=\"box\"\r\n              placeholder=\"Enter Email\"\r\n              ref={el => (this.emailInputElement = el)}\r\n              value={this.emailInputBind}\r\n              onInput={this.emailInputChange.bind(this)}\r\n            ></input>\r\n            {emailError}\r\n          </div>\r\n          <div class=\"card\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              class=\"box\"\r\n              placeholder=\"Enter password\"\r\n              ref={el => (this.passwordInputElement = el)}\r\n              value={this.passwordInputBind}\r\n              onInput={this.passwordInputChange.bind(this)}\r\n            ></input>\r\n            {passwordError}\r\n          </div>\r\n          {message}\r\n          <button type=\"submit\" id=\"submit\" disabled={this.isEmailValid == 'blank' || this.isEmailValid == 'notEmail' || !this.isPasswordValid}>LOG IN</button>\r\n          <a href=\"#\">Forget Password</a>\r\n        </form>\r\n        <span class=\"footer\">\r\n          Don't have an account yet ?{' '}\r\n          <a href=\"#\" onClick={this.swapping.bind(this)}>\r\n            create one\r\n          </a>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}